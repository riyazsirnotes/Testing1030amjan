Manual Testing :

Software : Set of instructions or programs to accomplish some task.

e.g : caalcualtor , messages , whatsapp etc ..


types of softwares :

1. System software : 

e.g : Operating systems , drivers ,etc..

2. Programming software: 

e.g : Compilers , interpreters ,debugging tools etc

3.Application Software :

web applications , Mobile applications , SAP applications , Desktop or standalone applications ,
mainframe applications , silverlite applications

Testing :

is a process of checking developed  software is working as per client business requirements or not .


finding defects or bugs

motto of testing is to deliver a quality product and deliver a risk free product

what do we test in now-a-days applications ( Web or Mobile applications)

- functionalities

- GUI

- Load Testing

- Performance Testing

- Usability

- 


how do we test ?

- Manual Testing :

testing activity carried for testing software applications(functional testing or load testing etc) using man effort .
Then it is called Manual Testing

- Automation Testing :

testing activity carried for testing software applications(functional testing or load testing etc) using

some tools like Selenium  / Cypress  / TOSCA  / UFT etc ..

Process of converting Test Cases to Test Scripts using some tool is called Automation














**************************************************************
2nd Feb

Terminologies in Software development or Testing :

- Project

if a software application developed for a specific customer .then it is called Project

- Product 

if a software application developed for multiple customers or user then it is called product

- Error :

Any incorrect human action or mistakes which gives wrong results

- Defect / Bug  / Fault :  

Deviation between expected behaviour to actual behaviour of the system is called defect.

Failure : if an end user identifies a defect while using the software application 
Then it is failure.

Note : 

presence of errors resultsin defects and presence of defects results in failure


why do a software application have defects ?

1) Incorrect requirements
2) Wrong design
3) wrong coding
4) poor coding
5) complex architecture
6) work pressure and time pressure
7) frequently change in business requirements

Now-a-days testing :

It's a process of checking are we developing right software or not and also checking developed
software is working or not

Software Testing = Verification +  Validation


Verification : It is process of checking are we developing right s/w or not

It is also called as Static Testing

Validation : It is process of checking developed software is working properly or not

It is also called as Dynamic Testing

*************************************************************

3rd Feb

what are roles or duties of tester ?

1) understanding application under test (AUT) 
2) Formal Testing (writing and executing test case)
3) Adhoc Testing (Informal Testing ) / No test cases
4) finding defects and reporting to developers
5) ReTesting and Regression testing
6) developing automation test scripts
7) executing automation test scripts
8) Analyse test results 
9) Prepare test reports

------------------------------------------------
Principle of software testing ?

7

1) Testing shows presence of defects 
2) Exhaustive testing is not possible
3) Early Testing
4) Pesticide Paradox
5) Defect Clustering
6) Testing is context(application) dependent / situtaion dependent
7) absence of defects is fallacy

***********************************************************************

4th Feb Saturday

SDLC :

software development life cycle


SDLC Models :

							SDLC Models
				
				Sequential 						Incremental
				
				1. Waterfall model				1. RAD (Rapid Application development)
				2. V-Model 						2. Prototype Model				
												3. Spiral Model			
												4. Agile Model
1. Waterfall Model

is well suited for small projects where requirements are clear

only validation
				

2. V Model
			
is well suited for small projects where requirements are not clear
so Early testing should be done

Verification + Validation

1. RAD (Rapid Application Development Model)
2. Prototype Model

This model is good for below scenario

  i) if customer is providing reference application
  ii) If customer requirements are not clear




**************************************************************
6th Feb Monday

Software Testing :

Static Testing :

It's a process of checking , are we developing right software or not

It's carried out in organization through reviews, inspection and Walk through's


Review : 

Examing a project related task is a Review

Requirments Review :

These reviews carried out by domain experts to find mistakes at requirements


Design Reviews :

These reviews carried out by Techincal / system experts to find out mistakesin design

Code Reviews :

These reviews carried out by Senoir developers to find devitaions in coding standards

NoOfLinks =10

Test Case Reviews :

These reviews carried out by Senoir Testers preferably test lead to check the test cases are
enough to test the project or not


Formal Reviews :

if any review is carried out by following proper review procedures or documentation


Inspection and Audit are best examples for Formal Reviews

Inspection : if a formal review carried out while executing a task

Audit : if a formal review carried out after execution of task

Informal Review :

if any review is carried out by without proper review procedures or documentation

Peer Reviews

Walk Through's :

Knowledge Transfer Sessions are called Walk Through's 


------------------------------------------------------------

Dynamic Testing :

Whitebox Testing :

Testing conducted on the source code by developers to make sure developed code is 
working as expected or not 

unit testing and integration testing is collectively called as Whitebox testing


Unit Testing :

A smallest part in the source code of application such as programs , functions , methods  are
called units.

Testing conducted on these units is called Unit Testing

Integration Testing : 

once all units are tested , programs are combined together .
Testing conducted on overall output is called Integration Testing



Blackbox testing :

Testing conducted on the developed application by testers and also end users is called
blackbox testing.



**************************************************************
7th Feb Tuesday


Functional System Testing Types :


1)Smoke Testing :

It is a kind of quick test or rough test performed on given application or build to decide 
whether it is eligible for further detailed testing or not

what to be verified in smoke testing ?

- we have to check all major functions are available ?

- we have to check the given application is consistently operable or not 

Objective of smoke testing iss to make sure whether given application is testable or not
- Not to find defects 

2) Formal Testing :

If we test a s/w application by following proper procedures and proper documentation.

In Simple words, writing test cases and excuting test cases.

recommended for maintenance projects

3) Adhoc Testing :

If we test a s/w application without following proper procedures and proper documentation.

- adhoc is perfomed for small projects or quick projects
- It is recommended for maintenance projects after Formal Testing


4)Priority Based Testing :

It is a process of deciding what to be tested first , what to test next and what to test last.


In other words , identifying important features in the product and testing them in order.


5)ReTesting

It is a process of validating reported defects/bugs are correctly resolved or not in 
modified build


6) Regression Testing :

It is a process of validating various functionalities in the modified build, where there is
a chance of getting side effects .

what is the diff b/n retesting and regression testing ?

Retesting performed modified build to make sure reported defects are correctly resolved

where as 

regression testing is perfomed on modified build for other features 


7)End to End Testing :

It is a process of checking over all functionalities of system from begining to end .

This will be carried out by senior testers preferably Test lead to make a decission whether
to stop testing or not

Special Functional System Testing :

1. BenchMark Testing 

It is a process of comparing our product with an established product in market.

It is required for products for which already competetors present in market


2. Exploratory Testing :

Exploring the application , understanding the application then testing it.

in two scenarios , we go for Exploratory 

- if requirement documentation is not available
- if requirements documentation is not providing sufficient  inputs


3) Monkey Testing :

Wantedly performing uneven operarations or zig-zag operarations with an intension of 
making system failure is called monkey testing


**************************************************************
8th Feb Wednesday

Sanity Testing :

Sanity test is done during the release phase to check for the main functionalities of application
without going deeper

Sanity testing is performed on stable builds 

It's a part of regression testing

It is planned when is there no enough time to do in-depth testing 

-------------------------------------------------------------

Non-Functional Testing :

Reponsiveness

Stability

Security

----------------------

time

speed 

user data volume 
----------------------------


Performance Testing :

	Load testing
	Stress testing
	Volume testing
	

mostly perforamce testing is done using tools 

jmeter ,  Load Runner , Neo Load etc ..


Performance Testing :

testing the reponse time of application under different conditions 

Load Testing :

testing the stability of the system under different loads (here different no of users)

we increase the load gradually and test the s/m

Stress Testing :

We suddenly increase the load and checking the stability

Volume Testing :

Here we test the user data volume capacity that s/m can hold


Security Testing :

Testing the security aspects 

---------------------------------------------------------
Globalization or Internationalization or I18N testing :

It is a process of checking end user having choice to configure different language options
(currency ,date and time foramt )

----------------------------------------------------------

Localization Testing :

IT's a process of checking default format,currency and language for the products designed for 
a specific locality of users

--------------------------------------------------------------

Recovery Testing:

IT's a process of checking how does our application handling unexpected or un predectible 
situtaion's like power failure , system crash , internet issues etc..


----------------------------------------------------------------

Installation Testing :

IT's a process of checking are we able to install the software successfully or not as per the
guidelines given in installation document.

-----------------------------------------------------------------

UnInstallation Testing :

IT's a process of checking are we able to uninstall the s/w successfully or not 
also the data clean up.

===========================================================================

User Acceptance testing :

Testing carried out by the end user on the delivered product to make sure whether it is ready for production or not.

UAT testing carried out in two ways :

1. Alpha Testing

It is first level of Acceptance testing carried out at company premises 

2. Beta Testing

It is last level of Acceptance testing carried out at customer premises



**************************************************************
9th Feb Thursday

STLC (Software Testing Life Cycle)


Test Planning :

It is the first phase of s/w testing where management defines Test Strategy and Test Plan to 
execute the work smoothly

Test Strategy :

It is a high level plan and approach defined by management that explains how current project
will be tested .

In general , test strategy is defined Project Manager or Test Manager.

Test Plan :

It is a detailed work plan that explains 
-> Scope of testing
-> test approach
-> Resources
-> Work Schedules

Test Plan Template :

An IEEE 819 test plan document will have following sections

1) Project Overiew

2) Documents References 

3) Scope of testing :

 3.1 In Scope (features to be tested)
 3.2 Out Scope (features not to be tested or NFT )

4) Test Strategy

5) Test Environment 

6) Test Deliverables

7) Staffing plan

8) Risk Planning 

9) Work Schedules

10) Approvals / sign offs




**************************************************************
10th Feb Friday


Test Planning Phase :

PM/Tm/TL will be involved in this phase .

Test Strategy and Test plan

Analysis : 


<td width="150" align="right">Username&nbsp;</td>

If any questions occured during analysis  , we document these questions in 
Requirement Clarifictaion Notes.

These questions will be clarified by Test Lead  . 

By end of the test analysis phase we should get knowledge on the Project.


FRS Template :

1. Overview : This section explains functionalities under development and testing.

2. Prototype : it is an optional section and this section provide snapshots of the functionalities

3. Page Elements : This Section will list out various controls / elements present in the page

4. Input Validation's or Business Rules : 
	This section explains various business rules enforced by client.

5. Use Case Diagram : 
   Its a graphical representation of Actor , Actions and System reponses

6.Use Cases : A use case will explain pre conditions , Actor , actions , post conditions

and possible expectations

User ID :	mngr266311
Password :	Admin123$


**************************************************************
13th Feb Monday

Test Design Phase :


Test Scenario :

A feature to be tested or a functionality to be tested in application under Test 
is a called TEst Scenario


Few Scenario's for Calculator Application :

1. Check Addition
2. Check Subraction
3. Check Multiplictaion 
4. Check Division

Few Scenario's for Mobile Instrument :

1.check switch on/off
2. check battery charging
3. check making a called
4. check recieving 
5. check sending a sms
6. check recieving a sms


????????????????????????????????
Assignment 

1.Write TEst Scenarios for Adactin Hotel Application
Module : Authentictaion
        Login / Forgot Password /Change Password
		
Module : Create Account
		Registration
		
		
2.Write TEst Cases for Adactin Hotel Application

for all above Scenarios


**************************************************************
14th Feb Tuesday

Assignment 

1.Write TEst Scenarios for Naukri registration

2.Write Test Cases for above scenarios


Test Case :

how to test ?

A set of pre-conditions , test procedures , input data(test data) and expected behaviour
of the system planned  by tester to validate a functionality in the project is called test case.


------------------------------------------------------------------

**************************************************************
14th Feb Tuesday

Test Case Design Techniques :

To avoid exhaustive testing and to ensure 100 % requirement coverage and to find defects and also
 reduce test cases count we follow techniques for S/w testing

1)Equivalance Class Partitioning (ECP)
2)Boundary Value Analysis (BVA)
3)Decission Table Testing
4)State Transition Testing
5)Use Case Based Testing
6)Error guessing 

1)Equivalance Class Partitioning (ECP) 


According to ECP we identify all possible i/p conditions to validate functionality

Then we divide them into groups (valid partitioning and Invalid Partitioning)
and under that we classify(sub-groups) the i/p's 

while classifing or sub-grouping , make sure each group should producing same logical output
Then pick atleast one i/p from group preferably the middle one


**************************************************************
16th Feb Thursday


2)Boundary Value Analysis (BVA)

This is technique used to reduce count of test cases 

It has practically proven that most of the developers are making mistakes while specifying boundary
conditions such as > , < , >= , <= 

To identify the defects BVA technique is introduced.

According to BVA , we have to identify partions where the ranges , the we have to consider the boundary values



3)Decission Table Testing



It the output of  a functionality depends on multiple inputs definitely developer might have used
logical operators ( AND OR etc) 
There is chance in place of AND operator he might use OR which gives defects
To find out those kind of defects Decission Table Testing is right choice

4)State Transition Testing

<a href="Register.php">New User Register Here</a>


?????????????????????????????
Assignment
??????????????????????????????
Write Test Scenarios and TEst cases for below requirements
R1.1 Payment Functionality for a Product in amazon


R1.2 Deleting an email functionality in gmail


**************************************************************
17th Feb Thursday

4)State Transition Testing

When we there a funtionality which moves from one page to other based on differnt inputs we go with 

State Transition Testing technique.


6)Error guessing Testing :

It's always used when tester comes from similar kind of product or experince in past 
Where he will write test cases based on Error guessing.

for e.g :

In his previous experince , he misght have validated email field to give errors
when it is invalid




**************************************************************
20th Feb Monday


7) Use Case Based Testing :

Actor -- user or group of users

Action -- activity or the task that actor performs

Outcome -- reponse or system behaviour

A use case is brief description of user action and system reponses.


------------------------------------
Requirement Tracability Matrix (RTM)

Mapping requirements to corresponding use case  , test scenarios and test cases
is called RTM

Adavantages of RTM 

1)As every requirement mapped to corresponding use cases ,scenarios and test cases .

Change requests can be handled or processed easily and effectively

2) asw we can trace a group of test cases belongs to specific requirement , test execution process 
will go smoothly

3) we trace percentage of test coverage . ie. how many requirements test cases are prepared and how 
many are pending
. we can track those.


-----------------------------------------------
Test Execution Phase :

IN this phase we execute planned test cases on the given build .

Following are the major work itesms in this phase 

1) Build Deployment

2) Build Acceptance Testing (Smoke Testing)

3) Execute TEst Cases

4) Document and reports defects

5) conducting retesting on the modified build

6) conducting regression testing on the modified build

7) conducting End to End testing on final build



**************************************************************
21st Feb Tuesday


https://login.oracle.com/mysso/signon.jsp

Test Execution Phase (Cont ...)


1) Build Deployment

Once code is developed and tested by Developer (WBT or unit Testing)

This code is released as build in QA / SIT (System Integration Test) environment

for every build developer will share below 2 documents

i) SRN (Software Release Notes )

a) Dev Team Information
b) Testing team Information
c) Build path (can be URL or app center link with buidl number dor .apk and .ipa files)
d) Known issues
e) Regression testing scenarios if applicable
f) Approvals

ii) Deployment Document (DD)

This document will explain hardware requirements, software requirements and build installation
procedure.

2) Build Acceptance Testing (Smoke Testing)

After deploying the build we will perform smoke testing to make sure given application is
testable or not
if not testable , we will reject the build


3) Execute TEst Cases

If smoke testing passes , we will start executing test cases based on priority.
Very High , High , Medium and low 

while executin the test steps we should update actual results then compare with expected results
if both are matched , we update step result as Passed 

one test case contains many steps . if all steps are passed , then we update in Test Case Summary 
the test case is passed .

