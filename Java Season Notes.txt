Java Season 1:

**********************************

Features of Java :


1. Simple

- syntax is simialr to C++
- removed confusing concepts like explicit pointers and Operator Overloading
- memory management done by Garbage Collector in Java 


2. Object Oriented Programming 

OO is a methodology for development and maintance of application.

1. Object
2. Class
3. Encapsulation
4. Polymorphism
5. Inheritance
6. Abstraction

3. Robust :

- Strong mem management 

- exception handling mechanism

- type checking mechanism


4. Secure :


5. Platform Independent :

here Platform means OS (operating System)

6. Architectural Neutral :

Architecture means Processor and RAM 

7. Portable :

Portable means Architecture (means one way of classification)

IBM

Apple

Solaris

WORA :  Write Once Run Anywhere



===========================================================================
Java Installation or JDK Installation 

https://www.oracle.com/in/java/technologies/downloads/


jdk-11.0.18_windows-x64_bin.exe



*********************************************************

Mar 7th Tuesday 


Configuration of Java :


JAVA_HOME

C:\Program Files\Java\jdk-11

path 

C:\Program Files\Java\jdk-11\bin


To check java is configure or not :


open cmd 

give > java -version

java version "11.0.18" 2023-01-17 LTS
Java(TM) SE Runtime Environment 18.9 (build 11.0.18+9-LTS-195)
Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.18+9-LTS-195, mixed mode)


							jdk folders
							
							
			lib						bin					jre
			
			
lib : Library 

predefined stuff (classes and interfaces) to develop java applications



					lib
					 |
			collection of jars ( similar to zip folders)
					 |
			collection of packages ( similar to folder)
					 |
			----------------------------
			|							|
		Classes 				    Interfaces
			|							 |
	------------------			-----------------------	
	|				  |         |					   |
variables			methods  Constants/Fields      abstarct methods




---------------------------------
bin : binaries ( executables)


tools to develop and maintain java  programs or applications



javac : to compile a java programs

java : to run the java program 

------------------------------------------------



jre ( Java Runtime Environment)


							JVM ( Java Virtual Machines)
							
	It's an abstarct machine (having tasks with no body)

								|
			-------------------------------------------------
			|					  |							  |
		CLSS				    EE (Executin Engine)	    GC(Garbage collector)


CLSS : Class Loader Susbsystem 

1.Loading
2.linking
3.initialization 



*********************************************************

Mar 8th Wednesday

						EE (Execution Engine)
						
			Interpreter						JIT compiler
			
											Just In Time 
											
											
Garbage Collector :

Mark :  to identify garbage 

Sweep : to deallocate the memory

-------------------------------------------------------------------------------------
Structure of Java Program :


1. Documentation Section
2. Package Section 
3. Import Section 
4. Class or Interface Section

1. Documentation Section :

Two types of comments:

i) single line comments

starts  // 

ii) Multi line comments

/* ljlkkjk
   lkjhlkjlkj
*/


2. Package Section 


Package means folder 

why package ?

for logical grouping

syntax :

package name;

e.g 

package base;

package test;

package testscripts.regression;


3. Import Section 


import packagename.*;

import packagename.ClassName;

import static packagename.*;



*********************************************************

Mar 9th Thursday

4. Class or Interface Section :



syntax :


access-specifier access-modifier class ClassName
{

//variables

//methods


}


e.g 

public class Hello
{

public static void main(String[] args)
{


}


}

===================================================================
Naming Convention in Java 
===================================================================



collection of packages ( similar to folder)
					 |
			----------------------------
			|							|
		Classes 				    Interfaces
			|							 |
	------------------			-----------------------	
	|				  |         |					   |
variables			methods  Constants/Fields      abstarct methods





packages :  all lower case

e.g java.util

org.openqa.selenium

regression


------------------------------------------

 Classes :  Title Case
 
 e.g   String
 
 Scanner
 
 ChromeDriver
 
 ValidateLogin
 ---------------------------------------------
 Interfaces : Title Case
 
 e.g 
 
 List
 
 WebDriver
 
 MyInter
 
 -----------------------------------------------
 
 variables : Camel Case [ CC = LC(lower case) + TC (Title case) ]
 
 
 x
 
 netSalary
 
 costOfItem
 
 ---------------------------------------------------
 
methods : Camel Case [ CC = LC(lower case) + TC (Title case) ]
 
methods will have ( braces 

main(

println(

nextInt(

getWindowHandle(

-----------------------------------------------

Constants/Fields  :  All Upper Case




PI = 3.14

MAX_LIMIT = 10000


------------------------------------------------

 abstarct methods : Camel Case [ CC = LC(lower case) + TC (Title case) ]
 
 here methods will not have body ends with ;
 
 
 


































































































